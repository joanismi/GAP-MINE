library(foreach)
library(doParallel)
oplsda.fs <- function(metrics, labels){
myCluster <- makeCluster(4, # number of cores to use
type = "PSOCK") # type of cluster
registerDoParallel(myCluster)
fs <- foreach(column = 1:ncol(labels), .combine = 'rbind') %dopar% {
library(ropls)
library(caret)
column_labels <- factor(labels[,column], levels=c(1,0))
train.index <- unlist(createDataPartition(column_labels, p = .8, list = TRUE))
all_labels  <- seq(1, nrow(labels))
test.index <- setdiff(all_labels, train.index)
if(length(test.index) == 3275){
test.index <- append(test.index, NA)
}
process.oplsda <- try(opls(metrics, column_labels, orthoI = NA, predI=1, crossvalI = 10, subset=train.index, fig.pdfC = "none", info.txtC='none'), silent=TRUE)
if("try-error" %in% class(process.oplsda)) {
process.oplsda <- try(opls(metrics, column_labels, orthoI = 9, predI=1, crossvalI = 10, subset=train.index, fig.pdfC = "none", info.txtC='none'), silent=TRUE)
}
if("try-error" %in% class(process.oplsda)) {
process.oplsda <- opls(metrics, column_labels, orthoI = 1, predI=1, crossvalI = 10, subset=train.index, fig.pdfC = "none", info.txtC='none')}
VIP <- getVipVn(process.oplsda)
return(list(VIP, as.vector(test.index)))
}
stopCluster(myCluster)
fs
}
####-------------False annotation modules---------------------------------------####
reactome_labels_fp <- read.csv('../python/data/processed/string_reactome_labels_fp.csv', header=FALSE)
setwd("~/GAP-MINE/R")
####-------------False annotation modules---------------------------------------####
reactome_labels_fp <- read.csv('../python/data/processed/string_reactome_labels_fp.csv', header=FALSE)
rwr_fp <- read.csv('../python/data/processed/metrics/string_process_rwr_fp.csv', row.names = 1)
row.names(reactome_labels_fp) <- row.names(rwr_fp)
colnames(reactome_labels_fp) <- colnames(rwr_fp)
####-------------False annotation modules---------------------------------------####
disgenet_labels_fp <- read.csv('../python/data/processed/string_disgenet_labels_fp.csv', header=FALSE)
disease_rwr_fp <- read.csv('../python/data/processed/metrics/string_disease_rwr_fp.csv', row.names = 1)
row.names(disgenet_labels_fp) <- row.names(disease_rwr_fp)
colnames(disgenet_labels_fp) <- colnames(disease_rwr_fp)
####-------------False annotation modules---------------------------------------####
disgenet_labels_conservative_fp <- read.csv('../python/data/processed/string_disgenet_conservative_labels_fp.csv', header=FALSE)
disease_rwr_conservative_fp <- read.csv('../python/data/processed/metrics/string_disease_rwr_conservative_fp.csv', row.names = 1)
row.names(disgenet_labels_conservative_fp) <- row.names(disease_rwr_conservative_fp)
colnames(disgenet_labels_conservative_fp) <- colnames(disease_rwr_conservative_fp)
####-------------False annotation modules---------------------------------------####
rwr_fp_fs <- oplsda.fs(rwr_fp, reactome_labels_fp)
write.csv(as.data.frame(rwr_fp_fs[,1]),"../python/data/processed/fs/reactome_rwr_fp_fs_string.csv", row.names = FALSE)
####-------------False annotation modules---------------------------------------####
disease_rwr_fp_fs <- oplsda.fs(disease_rwr_fp, disgenet_labels_fp)
write.csv(as.data.frame(disease_rwr_fp_fs[,1]),"../python/data/processed/fs/disease/disease_rwr_fp_fs_string.csv", row.names = FALSE)
####-------------False annotation modules---------------------------------------####
rwr_fp_fs <- oplsda.fs(rwr_fp, reactome_labels_fp)
write.csv(as.data.frame(rwr_fp_fs[,1]),"../python/data/processed/fs/reactome_rwr_fp_fs_string.csv", row.names = FALSE)
